/*
 * This file is generated by jOOQ.
*/
package com.warumono.databases.public_;


import com.warumono.databases.public_.tables.Author;
import com.warumono.databases.public_.tables.AuthorBook;
import com.warumono.databases.public_.tables.Book;
import com.warumono.databases.public_.tables.records.AuthorBookRecord;
import com.warumono.databases.public_.tables.records.AuthorRecord;
import com.warumono.databases.public_.tables.records.BookRecord;

import javax.annotation.Generated;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.UniqueKey;
import org.jooq.impl.AbstractKeys;


/**
 * A class modelling foreign key relationships between tables of the <code>PUBLIC</code> 
 * schema
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<AuthorRecord, Long> IDENTITY_AUTHOR = Identities0.IDENTITY_AUTHOR;
    public static final Identity<BookRecord, Long> IDENTITY_BOOK = Identities0.IDENTITY_BOOK;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AuthorRecord> CONSTRAINT_7 = UniqueKeys0.CONSTRAINT_7;
    public static final UniqueKey<AuthorBookRecord> CONSTRAINT_A = UniqueKeys0.CONSTRAINT_A;
    public static final UniqueKey<BookRecord> CONSTRAINT_1 = UniqueKeys0.CONSTRAINT_1;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<AuthorBookRecord, AuthorRecord> FK_AUTHOR_IN_AUTHOR_BOOK = ForeignKeys0.FK_AUTHOR_IN_AUTHOR_BOOK;
    public static final ForeignKey<AuthorBookRecord, BookRecord> FK_BOOK_IN_AUTHOR_BOOK = ForeignKeys0.FK_BOOK_IN_AUTHOR_BOOK;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 extends AbstractKeys {
        public static Identity<AuthorRecord, Long> IDENTITY_AUTHOR = createIdentity(Author.AUTHOR, Author.AUTHOR.ID);
        public static Identity<BookRecord, Long> IDENTITY_BOOK = createIdentity(Book.BOOK, Book.BOOK.ID);
    }

    private static class UniqueKeys0 extends AbstractKeys {
        public static final UniqueKey<AuthorRecord> CONSTRAINT_7 = createUniqueKey(Author.AUTHOR, "CONSTRAINT_7", Author.AUTHOR.ID);
        public static final UniqueKey<AuthorBookRecord> CONSTRAINT_A = createUniqueKey(AuthorBook.AUTHOR_BOOK, "CONSTRAINT_A", AuthorBook.AUTHOR_BOOK.AUTHOR_ID, AuthorBook.AUTHOR_BOOK.BOOK_ID);
        public static final UniqueKey<BookRecord> CONSTRAINT_1 = createUniqueKey(Book.BOOK, "CONSTRAINT_1", Book.BOOK.ID);
    }

    private static class ForeignKeys0 extends AbstractKeys {
        public static final ForeignKey<AuthorBookRecord, AuthorRecord> FK_AUTHOR_IN_AUTHOR_BOOK = createForeignKey(com.warumono.databases.public_.Keys.CONSTRAINT_7, AuthorBook.AUTHOR_BOOK, "FK_AUTHOR_IN_AUTHOR_BOOK", AuthorBook.AUTHOR_BOOK.AUTHOR_ID);
        public static final ForeignKey<AuthorBookRecord, BookRecord> FK_BOOK_IN_AUTHOR_BOOK = createForeignKey(com.warumono.databases.public_.Keys.CONSTRAINT_1, AuthorBook.AUTHOR_BOOK, "FK_BOOK_IN_AUTHOR_BOOK", AuthorBook.AUTHOR_BOOK.BOOK_ID);
    }
}
