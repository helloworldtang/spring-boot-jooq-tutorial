/*
 * This file is generated by jOOQ.
*/
package com.warumono.databases.public_.tables.daos;


import com.warumono.databases.public_.tables.AuthorBook;
import com.warumono.databases.public_.tables.records.AuthorBookRecord;

import java.util.List;

import javax.annotation.Generated;

import org.jooq.Configuration;
import org.jooq.Record2;
import org.jooq.impl.DAOImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.9.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AuthorBookDao extends DAOImpl<AuthorBookRecord, com.warumono.databases.public_.tables.pojos.AuthorBook, Record2<Long, Long>> {

    /**
     * Create a new AuthorBookDao without any configuration
     */
    public AuthorBookDao() {
        super(AuthorBook.AUTHOR_BOOK, com.warumono.databases.public_.tables.pojos.AuthorBook.class);
    }

    /**
     * Create a new AuthorBookDao with an attached configuration
     */
    public AuthorBookDao(Configuration configuration) {
        super(AuthorBook.AUTHOR_BOOK, com.warumono.databases.public_.tables.pojos.AuthorBook.class, configuration);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    protected Record2<Long, Long> getId(com.warumono.databases.public_.tables.pojos.AuthorBook object) {
        return compositeKeyRecord(object.getAuthorId(), object.getBookId());
    }

    /**
     * Fetch records that have <code>AUTHOR_ID IN (values)</code>
     */
    public List<com.warumono.databases.public_.tables.pojos.AuthorBook> fetchByAuthorId(Long... values) {
        return fetch(AuthorBook.AUTHOR_BOOK.AUTHOR_ID, values);
    }

    /**
     * Fetch records that have <code>BOOK_ID IN (values)</code>
     */
    public List<com.warumono.databases.public_.tables.pojos.AuthorBook> fetchByBookId(Long... values) {
        return fetch(AuthorBook.AUTHOR_BOOK.BOOK_ID, values);
    }
}
